<!DOCTYPE html>
<html lang="ko">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, user-scalable=no, initial-scale=1.0, maximum-scale=1.0, minimum-scale=1.0">
    <meta http-equiv="X-UA-Compatible" content="ie=edge">
    <title>홈</title>
    <style>
        body {
            font-family: Arial, sans-serif;
            background-color: #eeeeee;
            margin: 0;
            padding: 0;
            display: flex;
            flex-direction: column;
            align-items: center;
            justify-content: flex-start;
            height: 100vh;
            color: black;
            animation: fadeIn 1s ease-in-out;
        }

        @keyframes fadeIn {
            from {
                opacity: 0;
            }
            to {
                opacity: 1;
            }
        }

        .container {
            width: 90%;
            max-width: 800px;
            margin: 20px auto;
            padding-top: 20px;
        }

        .button-group {
            display: flex;
            justify-content: flex-end;
            margin-bottom: 20px;
            opacity: 0;
            animation: fadeInDown 0.5s ease-in-out forwards;
        }

        @keyframes fadeInDown {
            from {
                transform: translateY(-20px);
                opacity: 0;
            }
            to {
                transform: translateY(0);
                opacity: 1;
            }
        }

        .button-group button {
            padding: 10px 20px;
            margin-left: 10px;
            border: none;
            border-radius: 5px;
            cursor: pointer;
            font-size: 16px;
            transition: background-color 0.3s ease, transform 0.1s ease;
            color: white;
        }

        .button-group button:hover {
            transform: translateY(-1px);
        }

        .add-room-btn {
            background-color: #363636;
        }

        .add-room-btn:hover {
            background-color: #333333;
        }

        .logout-btn {
            background-color: #5c5c5c;
        }

        .logout-btn:hover {
            background-color: #525252;
        }

        .card {
            background-color: #eeeeee;
            border: 1px solid #b6b6b6;
            border-radius: 8px;
            padding: 20px;
            margin-bottom: 20px;
            box-shadow: 0 2px 5px rgba(66, 66, 66, 0.2);
            animation: fadeInUp 1s ease-in-out;
            transition: transform 0.3s ease, box-shadow 0.3s ease;
            color: black;
        }

        @keyframes fadeInUp {
            from {
                transform: translateY(20px);
                opacity: 0;
            }
            to {
                transform: translateY(0);
                opacity: 1;
            }
        }

        .card:hover {
            transform: translateY(-5px);
            box-shadow: 0 5px 15px rgba(0, 0, 0, 0.4);
            cursor: pointer;
        }

        .card h2 {
            margin-top: 0;
            color: #333333;
        }

        .card p {
            margin: 5px 0;
            font-size: 14px;
            color: #696969;
        }

        .card .actions {
            display: flex;
            justify-content: flex-end;
        }

        .card button {
            padding: 8px 15px;
            margin-left: 10px;
            border: none;
            border-radius: 5px;
            cursor: pointer;
            transition: background-color 0.3s ease;
            color: white;
        }

        .card .edit-btn {
            background-color: #363636;
        }

        .card .edit-btn:hover {
            background-color: #333333;
        }

        .card .delete-btn {
            background-color: #b83333;
        }

        .card .delete-btn:hover {
            background-color: #ad2d2d;
        }
    </style>
</head>
<body>
    <div class="container">
        <div class="button-group">
            <button class="add-room-btn" onclick="location.href = '/add'">추가</button>
            <button class="logout-btn" onclick="logout()">로그아웃</button>
        </div>
        <div id="card-container"></div>
    </div>
    <script>
        let playlists = [];
        let datalist = [];
        getPlaylist();

        async function getPlaylist() {
            await fetch("/api/v1/playlists").then(response => response.json())
                    .then(data => {
                        playlists = data;
                    });

            const cardContainer = document.getElementById('card-container');
            cardContainer.innerHTML = '';

            playlists.forEach(data => {
                const card = document.createElement('div');
                datalist = [];
                datalist = data;
                card.className = 'card';
                card.innerHTML = `
            <h2>${data.playlistName}</h2>
            <p>ID: ${data.chzzkChannelId}</p>
            <p>후원: ${data.donationPrice}원</p>
            <div class="actions">
                <button class="edit-btn" onclick="location.href ='/update?playlistId=${data.playlistId}&playlistName=${encodeURIComponent(data.playlistName)}'">수정</button>
                <button class="delete-btn" onclick="eliminate('${data.playlistId}', '${data.playlistName}', event)">삭제</button>
            </div>`;
                card.onclick = () => playlist(data);

                cardContainer.appendChild(card);
            });
        }

        async function eliminate(id, name, event) {
            event.stopPropagation();
            const response = await fetch(`/api/v1/playlist/delete?playlistId=${id}&playlistName=${encodeURIComponent(name)}`, { method: 'GET' });
            if (!response.ok) throw new Error('네트워크 응답 예외');
            await getPlaylist();
        }

        function logout() {
            location.href = `/logouts?username={{username}}`;
        }

        function playlist(data) {
            fetch(`/api/v1/channel?chzzkChannelId=${data.chzzkChannelId}`, { method: 'GET' }).then(response => response.text())
                    .then(result => {
                        if (result === 'null') {
                            alert("옮바른 치지직 아이디가 아닙니다!");
                        } else {
                            location.href = `/playlist?id=${data.playlistId}&name=${data.playlistName}`;
                        }
                    }).catch(err => {
                        console.log(err);
                    })
        }
    </script>
</body>
</html>